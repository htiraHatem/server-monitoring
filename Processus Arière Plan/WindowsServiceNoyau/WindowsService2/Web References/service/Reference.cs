//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsService2.service {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IService1", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ValidOTPOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsulterAlertOperationCompleted;
        
        private System.Threading.SendOrPostCallback LastScansOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatAdminOperationCompleted;
        
        private System.Threading.SendOrPostCallback StatServeurOperationCompleted;
        
        private System.Threading.SendOrPostCallback idscanmaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback inscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback rechPSKOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcflogOperationCompleted;
        
        private System.Threading.SendOrPostCallback noyauOperationCompleted;
        
        private System.Threading.SendOrPostCallback TimerOperationCompleted;
        
        private System.Threading.SendOrPostCallback pingOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcfMailSmtpOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcfSqlOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcfMailSentOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcfUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcfServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback wcfportOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WindowsService2.Properties.Settings.Default.WindowsService2_service_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ValidOTPCompletedEventHandler ValidOTPCompleted;
        
        /// <remarks/>
        public event StatServiceCompletedEventHandler StatServiceCompleted;
        
        /// <remarks/>
        public event ConsulterAlertCompletedEventHandler ConsulterAlertCompleted;
        
        /// <remarks/>
        public event LastScansCompletedEventHandler LastScansCompleted;
        
        /// <remarks/>
        public event StatAdminCompletedEventHandler StatAdminCompleted;
        
        /// <remarks/>
        public event StatServeurCompletedEventHandler StatServeurCompleted;
        
        /// <remarks/>
        public event idscanmaxCompletedEventHandler idscanmaxCompleted;
        
        /// <remarks/>
        public event inscriptionCompletedEventHandler inscriptionCompleted;
        
        /// <remarks/>
        public event rechPSKCompletedEventHandler rechPSKCompleted;
        
        /// <remarks/>
        public event wcflogCompletedEventHandler wcflogCompleted;
        
        /// <remarks/>
        public event noyauCompletedEventHandler noyauCompleted;
        
        /// <remarks/>
        public event TimerCompletedEventHandler TimerCompleted;
        
        /// <remarks/>
        public event pingCompletedEventHandler pingCompleted;
        
        /// <remarks/>
        public event wcfMailSmtpCompletedEventHandler wcfMailSmtpCompleted;
        
        /// <remarks/>
        public event wcfSqlCompletedEventHandler wcfSqlCompleted;
        
        /// <remarks/>
        public event wcfMailSentCompletedEventHandler wcfMailSentCompleted;
        
        /// <remarks/>
        public event wcfUrlCompletedEventHandler wcfUrlCompleted;
        
        /// <remarks/>
        public event wcfServiceCompletedEventHandler wcfServiceCompleted;
        
        /// <remarks/>
        public event wcfportCompletedEventHandler wcfportCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ValidOTP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidOTP(string login, string pwd, string token) {
            object[] results = this.Invoke("ValidOTP", new object[] {
                        login,
                        pwd,
                        token});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidOTPAsync(string login, string pwd, string token) {
            this.ValidOTPAsync(login, pwd, token, null);
        }
        
        /// <remarks/>
        public void ValidOTPAsync(string login, string pwd, string token, object userState) {
            if ((this.ValidOTPOperationCompleted == null)) {
                this.ValidOTPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidOTPOperationCompleted);
            }
            this.InvokeAsync("ValidOTP", new object[] {
                        login,
                        pwd,
                        token}, this.ValidOTPOperationCompleted, userState);
        }
        
        private void OnValidOTPOperationCompleted(object arg) {
            if ((this.ValidOTPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidOTPCompleted(this, new ValidOTPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/StatService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatService(int id, int idservice) {
            object[] results = this.Invoke("StatService", new object[] {
                        id,
                        idservice});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatServiceAsync(int id, int idservice) {
            this.StatServiceAsync(id, idservice, null);
        }
        
        /// <remarks/>
        public void StatServiceAsync(int id, int idservice, object userState) {
            if ((this.StatServiceOperationCompleted == null)) {
                this.StatServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatServiceOperationCompleted);
            }
            this.InvokeAsync("StatService", new object[] {
                        id,
                        idservice}, this.StatServiceOperationCompleted, userState);
        }
        
        private void OnStatServiceOperationCompleted(object arg) {
            if ((this.StatServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatServiceCompleted(this, new StatServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ConsulterAlert", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ConsulterAlert() {
            object[] results = this.Invoke("ConsulterAlert", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ConsulterAlertAsync() {
            this.ConsulterAlertAsync(null);
        }
        
        /// <remarks/>
        public void ConsulterAlertAsync(object userState) {
            if ((this.ConsulterAlertOperationCompleted == null)) {
                this.ConsulterAlertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsulterAlertOperationCompleted);
            }
            this.InvokeAsync("ConsulterAlert", new object[0], this.ConsulterAlertOperationCompleted, userState);
        }
        
        private void OnConsulterAlertOperationCompleted(object arg) {
            if ((this.ConsulterAlertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsulterAlertCompleted(this, new ConsulterAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/LastScans", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LastScans(int id) {
            object[] results = this.Invoke("LastScans", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LastScansAsync(int id) {
            this.LastScansAsync(id, null);
        }
        
        /// <remarks/>
        public void LastScansAsync(int id, object userState) {
            if ((this.LastScansOperationCompleted == null)) {
                this.LastScansOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLastScansOperationCompleted);
            }
            this.InvokeAsync("LastScans", new object[] {
                        id}, this.LastScansOperationCompleted, userState);
        }
        
        private void OnLastScansOperationCompleted(object arg) {
            if ((this.LastScansCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LastScansCompleted(this, new LastScansCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/StatAdmin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatAdmin() {
            object[] results = this.Invoke("StatAdmin", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatAdminAsync() {
            this.StatAdminAsync(null);
        }
        
        /// <remarks/>
        public void StatAdminAsync(object userState) {
            if ((this.StatAdminOperationCompleted == null)) {
                this.StatAdminOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatAdminOperationCompleted);
            }
            this.InvokeAsync("StatAdmin", new object[0], this.StatAdminOperationCompleted, userState);
        }
        
        private void OnStatAdminOperationCompleted(object arg) {
            if ((this.StatAdminCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatAdminCompleted(this, new StatAdminCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/StatServeur", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet StatServeur(int id) {
            object[] results = this.Invoke("StatServeur", new object[] {
                        id});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void StatServeurAsync(int id) {
            this.StatServeurAsync(id, null);
        }
        
        /// <remarks/>
        public void StatServeurAsync(int id, object userState) {
            if ((this.StatServeurOperationCompleted == null)) {
                this.StatServeurOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStatServeurOperationCompleted);
            }
            this.InvokeAsync("StatServeur", new object[] {
                        id}, this.StatServeurOperationCompleted, userState);
        }
        
        private void OnStatServeurOperationCompleted(object arg) {
            if ((this.StatServeurCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StatServeurCompleted(this, new StatServeurCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/idscanmax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int idscanmax() {
            object[] results = this.Invoke("idscanmax", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void idscanmaxAsync() {
            this.idscanmaxAsync(null);
        }
        
        /// <remarks/>
        public void idscanmaxAsync(object userState) {
            if ((this.idscanmaxOperationCompleted == null)) {
                this.idscanmaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnidscanmaxOperationCompleted);
            }
            this.InvokeAsync("idscanmax", new object[0], this.idscanmaxOperationCompleted, userState);
        }
        
        private void OnidscanmaxOperationCompleted(object arg) {
            if ((this.idscanmaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.idscanmaxCompleted(this, new idscanmaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/inscription", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string inscription(string username, string lastname, string adresse, string birthdate, string email, int tel, string login, string pwd) {
            object[] results = this.Invoke("inscription", new object[] {
                        username,
                        lastname,
                        adresse,
                        birthdate,
                        email,
                        tel,
                        login,
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void inscriptionAsync(string username, string lastname, string adresse, string birthdate, string email, int tel, string login, string pwd) {
            this.inscriptionAsync(username, lastname, adresse, birthdate, email, tel, login, pwd, null);
        }
        
        /// <remarks/>
        public void inscriptionAsync(string username, string lastname, string adresse, string birthdate, string email, int tel, string login, string pwd, object userState) {
            if ((this.inscriptionOperationCompleted == null)) {
                this.inscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OninscriptionOperationCompleted);
            }
            this.InvokeAsync("inscription", new object[] {
                        username,
                        lastname,
                        adresse,
                        birthdate,
                        email,
                        tel,
                        login,
                        pwd}, this.inscriptionOperationCompleted, userState);
        }
        
        private void OninscriptionOperationCompleted(object arg) {
            if ((this.inscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.inscriptionCompleted(this, new inscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/rechPSK", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string rechPSK(string login, string pwd) {
            object[] results = this.Invoke("rechPSK", new object[] {
                        login,
                        pwd});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void rechPSKAsync(string login, string pwd) {
            this.rechPSKAsync(login, pwd, null);
        }
        
        /// <remarks/>
        public void rechPSKAsync(string login, string pwd, object userState) {
            if ((this.rechPSKOperationCompleted == null)) {
                this.rechPSKOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrechPSKOperationCompleted);
            }
            this.InvokeAsync("rechPSK", new object[] {
                        login,
                        pwd}, this.rechPSKOperationCompleted, userState);
        }
        
        private void OnrechPSKOperationCompleted(object arg) {
            if ((this.rechPSKCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rechPSKCompleted(this, new rechPSKCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcflog", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool wcflog(int codeserveur, int codeservice, int idscan, string msg, bool test, TimeSpan tdr) {
            object[] results = this.Invoke("wcflog", new object[] {
                        codeserveur,
                        codeservice,
                        idscan,
                        msg,
                        test,
                        tdr});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void wcflogAsync(int codeserveur, int codeservice, int idscan, string msg, bool test, TimeSpan tdr) {
            this.wcflogAsync(codeserveur, codeservice, idscan, msg, test, tdr, null);
        }
        
        /// <remarks/>
        public void wcflogAsync(int codeserveur, int codeservice, int idscan, string msg, bool test, TimeSpan tdr, object userState) {
            if ((this.wcflogOperationCompleted == null)) {
                this.wcflogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcflogOperationCompleted);
            }
            this.InvokeAsync("wcflog", new object[] {
                        codeserveur,
                        codeservice,
                        idscan,
                        msg,
                        test,
                        tdr}, this.wcflogOperationCompleted, userState);
        }
        
        private void OnwcflogOperationCompleted(object arg) {
            if ((this.wcflogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcflogCompleted(this, new wcflogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/noyau", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string noyau() {
            object[] results = this.Invoke("noyau", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void noyauAsync() {
            this.noyauAsync(null);
        }
        
        /// <remarks/>
        public void noyauAsync(object userState) {
            if ((this.noyauOperationCompleted == null)) {
                this.noyauOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnoyauOperationCompleted);
            }
            this.InvokeAsync("noyau", new object[0], this.noyauOperationCompleted, userState);
        }
        
        private void OnnoyauOperationCompleted(object arg) {
            if ((this.noyauCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.noyauCompleted(this, new noyauCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/Timer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Timer(int a) {
            this.Invoke("Timer", new object[] {
                        a});
        }
        
        /// <remarks/>
        public void TimerAsync(int a) {
            this.TimerAsync(a, null);
        }
        
        /// <remarks/>
        public void TimerAsync(int a, object userState) {
            if ((this.TimerOperationCompleted == null)) {
                this.TimerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimerOperationCompleted);
            }
            this.InvokeAsync("Timer", new object[] {
                        a}, this.TimerOperationCompleted, userState);
        }
        
        private void OnTimerOperationCompleted(object arg) {
            if ((this.TimerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TimerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/ping", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ping(string url) {
            object[] results = this.Invoke("ping", new object[] {
                        url});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void pingAsync(string url) {
            this.pingAsync(url, null);
        }
        
        /// <remarks/>
        public void pingAsync(string url, object userState) {
            if ((this.pingOperationCompleted == null)) {
                this.pingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpingOperationCompleted);
            }
            this.InvokeAsync("ping", new object[] {
                        url}, this.pingOperationCompleted, userState);
        }
        
        private void OnpingOperationCompleted(object arg) {
            if ((this.pingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pingCompleted(this, new pingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcfMailSmtp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wcfMailSmtp(string operation, string res) {
            object[] results = this.Invoke("wcfMailSmtp", new object[] {
                        operation,
                        res});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wcfMailSmtpAsync(string operation, string res) {
            this.wcfMailSmtpAsync(operation, res, null);
        }
        
        /// <remarks/>
        public void wcfMailSmtpAsync(string operation, string res, object userState) {
            if ((this.wcfMailSmtpOperationCompleted == null)) {
                this.wcfMailSmtpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcfMailSmtpOperationCompleted);
            }
            this.InvokeAsync("wcfMailSmtp", new object[] {
                        operation,
                        res}, this.wcfMailSmtpOperationCompleted, userState);
        }
        
        private void OnwcfMailSmtpOperationCompleted(object arg) {
            if ((this.wcfMailSmtpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcfMailSmtpCompleted(this, new wcfMailSmtpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcfSql", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wcfSql(int CodeServeur, string operation, string res) {
            object[] results = this.Invoke("wcfSql", new object[] {
                        CodeServeur,
                        operation,
                        res});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wcfSqlAsync(int CodeServeur, string operation, string res) {
            this.wcfSqlAsync(CodeServeur, operation, res, null);
        }
        
        /// <remarks/>
        public void wcfSqlAsync(int CodeServeur, string operation, string res, object userState) {
            if ((this.wcfSqlOperationCompleted == null)) {
                this.wcfSqlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcfSqlOperationCompleted);
            }
            this.InvokeAsync("wcfSql", new object[] {
                        CodeServeur,
                        operation,
                        res}, this.wcfSqlOperationCompleted, userState);
        }
        
        private void OnwcfSqlOperationCompleted(object arg) {
            if ((this.wcfSqlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcfSqlCompleted(this, new wcfSqlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcfMailSent", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wcfMailSent(int CodeServeur, string destinataire) {
            object[] results = this.Invoke("wcfMailSent", new object[] {
                        CodeServeur,
                        destinataire});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wcfMailSentAsync(int CodeServeur, string destinataire) {
            this.wcfMailSentAsync(CodeServeur, destinataire, null);
        }
        
        /// <remarks/>
        public void wcfMailSentAsync(int CodeServeur, string destinataire, object userState) {
            if ((this.wcfMailSentOperationCompleted == null)) {
                this.wcfMailSentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcfMailSentOperationCompleted);
            }
            this.InvokeAsync("wcfMailSent", new object[] {
                        CodeServeur,
                        destinataire}, this.wcfMailSentOperationCompleted, userState);
        }
        
        private void OnwcfMailSentOperationCompleted(object arg) {
            if ((this.wcfMailSentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcfMailSentCompleted(this, new wcfMailSentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcfUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wcfUrl(string url, string res) {
            object[] results = this.Invoke("wcfUrl", new object[] {
                        url,
                        res});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wcfUrlAsync(string url, string res) {
            this.wcfUrlAsync(url, res, null);
        }
        
        /// <remarks/>
        public void wcfUrlAsync(string url, string res, object userState) {
            if ((this.wcfUrlOperationCompleted == null)) {
                this.wcfUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcfUrlOperationCompleted);
            }
            this.InvokeAsync("wcfUrl", new object[] {
                        url,
                        res}, this.wcfUrlOperationCompleted, userState);
        }
        
        private void OnwcfUrlOperationCompleted(object arg) {
            if ((this.wcfUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcfUrlCompleted(this, new wcfUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcfService", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wcfService(string type, int CodeServeur, string operation, string res, string destinataire, int port) {
            object[] results = this.Invoke("wcfService", new object[] {
                        type,
                        CodeServeur,
                        operation,
                        res,
                        destinataire,
                        port});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wcfServiceAsync(string type, int CodeServeur, string operation, string res, string destinataire, int port) {
            this.wcfServiceAsync(type, CodeServeur, operation, res, destinataire, port, null);
        }
        
        /// <remarks/>
        public void wcfServiceAsync(string type, int CodeServeur, string operation, string res, string destinataire, int port, object userState) {
            if ((this.wcfServiceOperationCompleted == null)) {
                this.wcfServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcfServiceOperationCompleted);
            }
            this.InvokeAsync("wcfService", new object[] {
                        type,
                        CodeServeur,
                        operation,
                        res,
                        destinataire,
                        port}, this.wcfServiceOperationCompleted, userState);
        }
        
        private void OnwcfServiceOperationCompleted(object arg) {
            if ((this.wcfServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcfServiceCompleted(this, new wcfServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IService1/wcfport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet wcfport(string ip, int port) {
            object[] results = this.Invoke("wcfport", new object[] {
                        ip,
                        port});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void wcfportAsync(string ip, int port) {
            this.wcfportAsync(ip, port, null);
        }
        
        /// <remarks/>
        public void wcfportAsync(string ip, int port, object userState) {
            if ((this.wcfportOperationCompleted == null)) {
                this.wcfportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnwcfportOperationCompleted);
            }
            this.InvokeAsync("wcfport", new object[] {
                        ip,
                        port}, this.wcfportOperationCompleted, userState);
        }
        
        private void OnwcfportOperationCompleted(object arg) {
            if ((this.wcfportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.wcfportCompleted(this, new wcfportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1064.2")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class TimeSpan {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidOTPCompletedEventHandler(object sender, ValidOTPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidOTPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidOTPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StatServiceCompletedEventHandler(object sender, StatServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ConsulterAlertCompletedEventHandler(object sender, ConsulterAlertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsulterAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsulterAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LastScansCompletedEventHandler(object sender, LastScansCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LastScansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LastScansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StatAdminCompletedEventHandler(object sender, StatAdminCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void StatServeurCompletedEventHandler(object sender, StatServeurCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StatServeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StatServeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void idscanmaxCompletedEventHandler(object sender, idscanmaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class idscanmaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal idscanmaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void inscriptionCompletedEventHandler(object sender, inscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class inscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal inscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void rechPSKCompletedEventHandler(object sender, rechPSKCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rechPSKCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rechPSKCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcflogCompletedEventHandler(object sender, wcflogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcflogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcflogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void noyauCompletedEventHandler(object sender, noyauCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class noyauCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal noyauCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TimerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void pingCompletedEventHandler(object sender, pingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcfMailSmtpCompletedEventHandler(object sender, wcfMailSmtpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcfMailSmtpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcfMailSmtpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcfSqlCompletedEventHandler(object sender, wcfSqlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcfSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcfSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcfMailSentCompletedEventHandler(object sender, wcfMailSentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcfMailSentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcfMailSentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcfUrlCompletedEventHandler(object sender, wcfUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcfUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcfUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcfServiceCompletedEventHandler(object sender, wcfServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcfServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcfServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void wcfportCompletedEventHandler(object sender, wcfportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class wcfportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal wcfportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591